// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String           @id @default(uuid())
  email     String           @unique
  password  String
  createdAt DateTime         @default(now())
  entries   EmotionsRecord[]
  role      Role             @default(USER)
}

enum Role {
  ADMIN
  USER
}

model Emotion {
  id            String                @id @default(uuid())
  color         String                @unique // e.g., "#FF5733"
  translations  EmotionTranslation[]
  emotionScores EmotionScore[]
}

model EmotionTranslation {
  id        String  @id @default(uuid())
  language  String  // "fr", "en", "es", etc.
  name      String  // e.g., "Happy", "Sad"
  emotionId String
  emotion   Emotion @relation(fields: [emotionId], references: [id])

  @@unique([language, name]) // Ensure unique name per language for each emotion
}

model EmotionScore {
  id             String         @id @default(uuid())
  emotionId      String
  emotion        Emotion        @relation(fields: [emotionId], references: [id])
  recordId       String
  emotionsRecord EmotionsRecord @relation(fields: [recordId], references: [id])
  score          Int // Between 0 and 10
}

model EmotionsRecord {
  id        String         @id @default(uuid())
  userId    String
  user      User           @relation(fields: [userId], references: [id])
  createdAt DateTime
  scores    EmotionScore[]
}
